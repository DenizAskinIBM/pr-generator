# PR Recommendation System Task Definitions
tasks:
  - id: repository_assessment
    name: Repository Assessment
    description: "Evaluate repository structure and complexity to choose appropriate PR grouping strategies"
    agent: pr_strategist
    expected_output: "A comprehensive assessment of the repository's structure, complexity, and an identification of the optimal grouping strategies"
    output_pydantic: "RepoAssessmentResult"
    context: |
      You need to carefully analyze the repository structure and changes to determine the best approach for creating pull request groups.
      Consider:
      1. The total number of files changed
      2. The distribution of changes across directories
      3. File types involved in the changes
      4. The size and complexity of individual changes
      5. Potential logical groupings based on directory structure or file naming patterns
      
      Based on your analysis, recommend specific grouping strategies that would be most effective for this repository.

  - id: pr_strategy_development
    name: PR Strategy Development
    description: "Create logical groups of files for PRs using the appropriate strategies identified in the repository assessment"
    agent: pr_strategist
    expected_output: "A well-structured set of PR groups organized according to the chosen strategies"
    output_pydantic: "PRGroupingStrategy"
    context: |
      Using the repository assessment and the recommended strategies, create logical groups of files for PRs.
      For each group:
      1. Ensure there's a clear organizing principle (feature, subsystem, dependency, etc.)
      2. Keep the groups balanced in size when possible
      3. Prioritize keeping related changes together
      4. Consider technical dependencies between files
      5. Avoid mixing unrelated changes in the same group
      
      Provide a rationale for each grouping to explain your reasoning.

  - id: pr_validation
    name: PR Validation
    description: "Verify PR groups for completeness, balance, and coherence to ensure quality"
    agent: pr_validator
    expected_output: "A validated and potentially refined set of PR groups, with any issues identified and addressed"
    output_pydantic: "PRValidationResult"
    context: |
      Review the PR groups created by the PR Strategist and validate them against best practices.
      Check for:
      1. Completeness - all changed files are included in some group
      2. Balance - PR groups are reasonably sized for review
      3. Coherence - each PR has a clear purpose and contains related changes
      4. Clarity - PR titles and descriptions are clear and informative
      5. Dependencies - PRs with dependencies are properly identified

      Refine the groups if necessary to address any issues you identify.